{"version":3,"sources":["components/Navbar.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","state","isLoggedIn","handleNavbarCollapse","bind","sessionStorage","getItem","this","setState","prevState","document","querySelector","classList","remove","className","to","class","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","window","removeItem","location","Component","Footer","open","Landing","lazy","Post","CreatePost","EditPost","PostsList","Login","About","App","fallback","role","path","exact","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2aa76d0a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends Component {\n    constructor() {\n        super();\n        this.state = { isLoggedIn: false };\n\n        this.handleNavbarCollapse = this.handleNavbarCollapse.bind(this);\n    }\n\n    // Update navbar component when user logs in, to display \"Login\" or \"Logout\"\n    componentDidMount() {\n        if (sessionStorage.getItem(\"isLoggedIn\") === \"true\") {\n            this.setState((prevState) => {\n                if (!prevState.isLoggedIn) {\n                    return { isLoggedIn: true };\n                }\n            });\n        }\n        if (sessionStorage.getItem(\"isLoggedIn\") === \"false\") {\n            this.setState((prevState) => {\n                if (prevState.isLoggedIn) {\n                    return { isLoggedIn: false };\n                }\n            });\n        }\n    }\n\n    // Collapse navabr after clicked on mobile screens\n    handleNavbarCollapse() {\n        document.querySelector(\"#navbarTogglerDemo01\").classList.remove(\"show\");\n    }\n\n    render() {\n        return (\n            <nav className=\"navbar navbar-custom navbar-expand-lg \">\n                <Link to=\"/\" className=\"navbar-brand\">\n                <i class=\"fas fa-spider\"/> iCodeTill\n                    <span className=\"full-stop\">.</span>xyz\n                </Link>\n                <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    data-toggle=\"collapse\"\n                    data-target=\"#navbarTogglerDemo01\"\n                    aria-controls=\"navbarTogglerDemo01\"\n                    aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\"\n                >\n                    <span>\n                        <i className=\"fa fa-bars\"></i>\n                    </span>\n                </button>\n                <div\n                    className=\"collapse navbar-collapse\"\n                    id=\"navbarTogglerDemo01\"\n                >\n                    <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                        <li className=\"navbar-item\">\n                            <Link\n                                to=\"/about\"\n                                className=\"nav-link\"\n                                // Collapse the navbar once an item is clicked\n                                onClick={this.handleNavbarCollapse}\n                            >\n                                About\n                            </Link>\n                        </li>\n                        <li className=\"navbar-item\">\n                            <Link\n                                to=\"/posts\"\n                                className=\"nav-link\"\n                                // Collapse the navbar once an item is clicked\n                                onClick={this.handleNavbarCollapse}\n                            >\n                                Posts\n                            </Link>\n                        </li>\n                        {/* <li className=\"navbar-item\">\n                            <Link\n                                to=\"/posts/chochocho\"\n                                className=\"nav-link\"\n                                // Collapse the navbar once an item is clicked\n                                onClick={this.handleNavbarCollapse}\n                            >\n                                New Post\n                            </Link>\n                        </li> */}\n\n                        {/* Display \"Login\" or \"Logout\" link based on the state of the navbar component */}\n                        {!this.state.isLoggedIn ? (\n                            <li className=\"navbar-item\">\n                                <Link\n                                    to=\"/login\"\n                                    className=\"nav-link\"\n                                    // Collapse the navbar once an item is clicked\n                                    onClick={this.handleNavbarCollapse}\n                                >\n                                    Login\n                                </Link>\n                            </li>\n                        ) : (\n                            <li className=\"navbar-item\">\n                                <Link\n                                    to=\"/logout\"\n                                    className=\"nav-link\"\n                                    onClick={() => {\n                                        window.sessionStorage.removeItem(\n                                            \"isLoggedIn\"\n                                        );\n                                        window.sessionStorage.removeItem(\n                                            \"username\"\n                                        );\n                                        window.location = \"/posts\";\n                                    }}\n                                >\n                                    Logout\n                                </Link>\n                            </li>\n                        )}\n                    </ul>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;\n","import React from \"react\";\n\nconst Footer = () => (\n    <footer>\n        Created by <span className='text-warning'id=\"rajat\">Valentine</span>\n        <br />\n        <span>\n            <i\n                className=\"fab fa-github\"\n                onClick={() =>\n                    window.open(\"https://github.com/Sugarcothe\", \"_blank\")\n                }\n            ></i>{\" \"}\n           \n            <i\n                className=\"fab fa-linkedin\"\n                onClick={() =>\n                    window.open(\n                        \"https://www.linkedin.com/in/valentine-eze-751a40b2\",\n                        \"_blank\"\n                    )\n                }\n            ></i>{\" \"}\n            <i\n                className=\"fab fa-stack-overflow\"\n                onClick={() =>\n                    window.open(\n                        \"https://stackoverflow.com/users/14275698/eze-valentine-ifeanyichukwu\",\n                        \"_blank\"\n                    )\n                }\n            ></i>{\" \"}\n            <i\n                className=\"fab fa-twitter\"\n                onClick={() =>\n                    window.open(\"https://twitter.com/sweetestshuga\", \"_blank\")\n                }\n            ></i>\n            <i\n                className=\"fab fa-medium\"\n                onClick={() =>\n                    window.open(\"https://ifeanyivalentine82.medium.com\", \"_blank\")\n                }\n            ></i>{\" \"}\n            <i\n                className=\"fab fas fa-user-tie\"\n                onClick={() =>\n                    window.open(\"https://novoresume.com/editor/resume/ece07cb0-87fe-11eb-a08a-2301b924a048\", \"_blank\")\n                }\n            ></i>\n        </span>\n    </footer>\n);\n// <i class=\"fas fa-user-tie\"></i>\n\nexport default Footer;\n","import React, { lazy, Suspense } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n//Import style\nimport \"./stylesheets/index.css\";\n\n//Import all components\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nconst Landing = lazy(() => import(\"./components/Landing\"));\nconst Post = lazy(() => import(\"./components/Post\"));\nconst CreatePost = lazy(() => import(\"./components/CreatePosts\"));\nconst EditPost = lazy(() => import(\"./components/EditPost\"));\nconst PostsList = lazy(() => import(\"./components/PostsList\"));\nconst Login = lazy(() => import(\"./components/Login\"));\nconst About = lazy(() => import(\"./components/About\"));\n\nconst renderLoader = () => (\n    <div className=\"spinner-container\">\n        <div className=\"spinner-border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n        </div>\n    </div>\n);\n\nconst App = () => (\n    <div className=\"container\">\n        <Router>\n            <Navbar />\n            <Suspense fallback={renderLoader()}>\n                <Switch>\n                    <Route path=\"/\" exact component={Landing} />\n                    <Route path=\"/posts\" exact component={PostsList} />\n                    <Route path=\"/posts/chochocho/\" exact component={CreatePost} />\n                    <Route path=\"/posts/:id\" exact component={Post} />\n                    <Route path=\"/posts/:id/edit\" exact component={EditPost} />\n                    <Route path=\"/login\" component={Login} />\n                    <Route path=\"/about\" component={About} />\n                </Switch>\n            </Suspense>\n            <Footer />\n        </Router>\n    </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}