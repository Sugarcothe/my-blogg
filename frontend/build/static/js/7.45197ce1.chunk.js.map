{"version":3,"sources":["components/CreatePosts.js"],"names":["baseURL","process","REACT_APP_BASEURL","CreatePosts","state","title","body","author","date","Date","isLoggedIn","handleChange","bind","handleSubmit","handleEditorChange","sessionStorage","getItem","this","setState","event","editor","data","getData","target","name","value","preventDefault","sanitizedData","sanitizeHtml","trim","length","alert","document","querySelector","style","display","Blog","axios","post","then","res","window","location","catch","err","console","log","className","role","onSubmit","type","onChange","required","placeholder","ClassicEditor","config","toolbar","onClick","data-dismiss","aria-label","aria-hidden","Component"],"mappings":"6RAMMA,EAAUC,mIAAYC,mBAAqB,wBAE3CC,E,kDACF,aAAe,IAAD,8BACV,gBAEKC,MAAQ,CACTC,MAAO,GACPC,KAAM,GACNC,OAAQ,GACRC,KAAM,IAAIC,KACVC,YAAY,GAGhB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,mBAAqB,EAAKA,mBAAmBF,KAAxB,gBAbhB,E,qDAiBd,WACiD,SAAzCG,eAAeC,QAAQ,eACvBC,KAAKC,SAAS,CACVX,OAAQQ,eAAeC,QAAQ,YAC/BN,YAAY,M,gCAKxB,SAAmBS,EAAOC,GACtB,IAAMC,EAAOD,EAAOE,UACpBL,KAAKC,SAAS,CAAEZ,KAAMe,M,0BAG1B,SAAaF,GACT,MAAwBA,EAAMI,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEdR,KAAKC,SAAL,eACKM,EAAOC,M,0BAIhB,SAAaN,GACTA,EAAMO,iBAENT,KAAKC,SAAS,CAAEV,KAAM,IAAIC,OAG1B,IAAMkB,EAAgBC,IAAaX,KAAKb,MAAME,KAAKuB,QAGnD,GAAIF,EAAcG,OAAS,IACvBC,MAAM,wCACH,CAEHC,SAASC,cAAc,sBAAsBC,MAAMC,QAAU,OAE7DlB,KAAKC,SAAS,CAAEZ,KAAMqB,IAEtB,IAAMS,EAAO,CACT/B,MAAOY,KAAKb,MAAMC,MAClBE,OAAQU,KAAKb,MAAMG,OACnBD,KAAMW,KAAKb,MAAME,KACjBE,KAAMS,KAAKb,MAAMI,MAGrB6B,IACKC,KADL,UACatC,EADb,yBAC6CoC,GACxCG,MAAK,SAACC,GAAD,OAAUC,OAAOC,SAAW,YACjCC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,S,oBAIxC,WACI,OAAI3B,KAAKb,MAAMM,WAEP,6BAEI,yBACIqC,UAAU,oBACVb,MAAO,CAAEC,QAAS,SAElB,yBAAKY,UAAU,iBAAiBC,KAAK,UACjC,0BAAMD,UAAU,WAAhB,gBAIR,yBAAKA,UAAU,YACX,mDAEI,0BAAMA,UAAU,aAAhB,MAEJ,0BAAME,SAAUhC,KAAKJ,cACjB,yBAAKkC,UAAU,cACX,2BAAOA,UAAU,aAAjB,WACA,2BACIA,UAAU,yBACVG,KAAK,OACL1B,KAAK,QACLC,MAAOR,KAAKb,MAAMC,MAClB8C,SAAUlC,KAAKN,aACfyC,UAAQ,EACRC,YAAY,oBAGpB,6BACI,kBAAC,IAAD,CACIjC,OAAQkC,IACRH,SAAUlC,KAAKH,mBACfyC,OAAQ,CACJF,YACI,sCACJG,QAAS,CACL,UACA,IACA,OACA,SACA,OACA,eACA,eACA,IACA,aACA,aACA,OACA,YAKhB,6BACA,yBAAKT,UAAU,cACX,2BACIG,KAAK,SACLzB,MAAM,cACNsB,UAAU,uCAS9B,yBACIA,UAAU,sBACVC,KAAK,QACLS,QAAS,kBAAOhB,OAAOC,SAAW,WAHtC,0CAMI,4BACIQ,KAAK,SACLH,UAAU,QACVW,eAAa,QACbC,aAAW,SAEX,0BAAMC,cAAY,OAAOb,UAAU,eAAnC,OACY,W,GA1JVc,aAmKX1D,a","file":"static/js/7.45197ce1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport sanitizeHtml from \"sanitize-html\";\n\nconst baseURL = process.env.REACT_APP_BASEURL || \"http://localhost:5000\";\n\nclass CreatePosts extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            title: \"\",\n            body: \"\",\n            author: \"\",\n            date: new Date(),\n            isLoggedIn: false,\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleEditorChange = this.handleEditorChange.bind(this);\n    }\n\n    // Set author name from logged in user's profile\n    componentDidMount() {\n        if (sessionStorage.getItem(\"isLoggedIn\") === \"true\") {\n            this.setState({\n                author: sessionStorage.getItem(\"username\"),\n                isLoggedIn: true,\n            });\n        }\n    }\n\n    handleEditorChange(event, editor) {\n        const data = editor.getData();\n        this.setState({ body: data });\n    }\n\n    handleChange(event) {\n        const { name, value } = event.target;\n\n        this.setState({\n            [name]: value,\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        this.setState({ date: new Date() });\n\n        // sanitize data before setting state\n        const sanitizedData = sanitizeHtml(this.state.body.trim());\n\n        // If the post body is too less, do not submit\n        if (sanitizedData.length < 400) {\n            alert(\"Cannot submit such a short post!\");\n        } else {\n            // Display a spinner until the post is submitted\n            document.querySelector(\".spinner-container\").style.display = \"flex\";\n\n            this.setState({ body: sanitizedData });\n\n            const Blog = {\n                title: this.state.title,\n                author: this.state.author,\n                body: this.state.body,\n                date: this.state.date,\n            };\n\n            axios\n                .post(`${baseURL}/server/posts/create/`, Blog)\n                .then((res) => (window.location = \"/posts\"))\n                .catch((err) => console.log(err));\n        }\n    }\n\n    render() {\n        if (this.state.isLoggedIn) {\n            return (\n                <div>\n                    {/* A spinner to indicate loading until new post is submitted */}\n                    <div\n                        className=\"spinner-container\"\n                        style={{ display: \"none\" }}\n                    >\n                        <div className=\"spinner-border\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </div>\n                    </div>\n\n                    <div className=\"new-post\">\n                        <h1>\n                            Create New Blog Post\n                            <span className=\"full-stop\">.</span>\n                        </h1>\n                        <form onSubmit={this.handleSubmit}>\n                            <div className=\"form-group\">\n                                <label className=\"new-title\">Title: </label>\n                                <input\n                                    className=\"form-control new-title\"\n                                    type=\"text\"\n                                    name=\"title\"\n                                    value={this.state.title}\n                                    onChange={this.handleChange}\n                                    required\n                                    placeholder=\"The Best Title\"\n                                />\n                            </div>\n                            <div>\n                                <CKEditor\n                                    editor={ClassicEditor}\n                                    onChange={this.handleEditorChange}\n                                    config={{\n                                        placeholder:\n                                            \"Start typing your blog post here...\",\n                                        toolbar: [\n                                            \"Heading\",\n                                            \"|\",\n                                            \"Bold\",\n                                            \"Italic\",\n                                            \"Link\",\n                                            \"NumberedList\",\n                                            \"BulletedList\",\n                                            \"|\",\n                                            \"BlockQuote\",\n                                            \"MediaEmbed\",\n                                            \"Undo\",\n                                            \"Redo\",\n                                        ],\n                                    }}\n                                />\n                            </div>\n                            <br />\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"submit\"\n                                    value=\"Create Post\"\n                                    className=\"btn btn-outline-primary btn-lg\"\n                                />\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div\n                    className=\"alert alert-warning\"\n                    role=\"alert\"\n                    onClick={() => (window.location = \"/login\")}\n                >\n                    You need to login to create a new post!\n                    <button\n                        type=\"button\"\n                        className=\"close\"\n                        data-dismiss=\"alert\"\n                        aria-label=\"Close\"\n                    >\n                        <span aria-hidden=\"true\" className=\"alert-close\">\n                            &times;{\" \"}\n                        </span>\n                    </button>\n                </div>\n            );\n        }\n    }\n}\n\nexport default CreatePosts;\n"],"sourceRoot":""}